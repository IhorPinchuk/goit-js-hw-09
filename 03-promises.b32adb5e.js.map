{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SACtCC,QAAQC,IAAIJ,GAGAK,OAAOL,EAAOM,MAAMC,OAAhC,IAGIC,EAAW,EAIfR,EAAOS,iBAAiB,UAgBxB,SAAwBC,GACtBA,EAAMC,iBAGN,IAAMC,EAAOP,OAAOL,EAAOY,KAAKL,OAC5BM,EAAQR,OAAOL,EAAOM,MAAMC,OAG1BO,EAAUC,aAAY,WAC1B,IAvBmBC,EAAUC,EAuBvBC,EAASb,OAAOL,EAAOkB,OAAOX,OAEpCM,GAASD,GADTJ,GAAY,IAEIU,GA1BGF,EA2BHR,EA3BaS,EA2BHJ,EA1BrB,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAV,EAAUV,MAAAW,IAEpBI,EAAO,CAAEK,SAAAV,EAAUV,MAAAW,G,GAEpBA,E,KAkBEU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUI,EAAKF,EAALtB,MACjBH,QAAQC,IAAI,uBAAwC2B,OAAfF,EAAS,QAAYE,OAAND,EAAM,M,IAE3DE,OAAM,SAAAJ,G,IAAGK,EAAQL,EAARF,SAAUQ,EAAKN,EAALtB,MAClBH,QAAQC,IAAI,sBAAqC2B,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,IAG3DC,cAAcrB,E,GAEfF,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconsole.log(formEl);\n// console.log(formEl.delay);\n// console.log(formEl.step);\nlet delay = Number(formEl.delay.value);\n// const step = Number(formEl.step.value);\n// const amount = formEl.amount.value;\nlet position = 0;\n// let delay = 0;\n// console.log(delay);\n\nformEl.addEventListener('submit', createPromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // const delay = Number(formEl.delay.value);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(event) {\n  event.preventDefault();\n\n  // const amount = Number(formEl.amount.value);\n  const step = Number(formEl.step.value);\n  let delay = Number(formEl.delay.value);\n  // console.log(delay);\n  \n  const timerId = setInterval(() => {\n    const amount = Number(formEl.amount.value);\n    position += 1;\n    delay += step;\n    if (position <= amount) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      clearInterval(timerId);\n    }\n  }, step);\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","console","log","Number","delay","value","$ce04d3a99e08e73b$var$position","addEventListener","event","preventDefault","step","delay2","timerId","setInterval","position1","delay1","amount","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","position2","delay3","concat","catch","position3","delay4","clearInterval"],"version":3,"file":"03-promises.b32adb5e.js.map"}