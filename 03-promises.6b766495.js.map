{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SACtCC,QAAQC,IAAIJ,GAGAK,OAAOL,EAAOM,MAAMC,OAAhC,IAGIC,EAAW,EAIfR,EAAOS,iBAAiB,UAgBxB,SAAwBC,GACtBA,EAAMC,iBAGN,MAAMC,EAAOP,OAAOL,EAAOY,KAAKL,OAChC,IAAIM,EAAQR,OAAOL,EAAOM,MAAMC,OAGhC,MAAMO,EAAUC,aAAY,KAC1B,MAAMC,EAASX,OAAOL,EAAOgB,OAAOT,OAvBxC,IAAuBU,EAAUC,EAwB7BV,GAAY,EACZK,GAASD,EACLJ,GAAYQ,GA1BGC,EA2BHT,EA3BaU,EA2BHL,EA1BrB,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUX,MAAAY,IAEpBG,EAAO,CAAEK,SAAAT,EAAUX,MAAAY,GAAQ,GAE5BA,EAAM,KAkBJS,MAAK,EAAGD,SAAAE,EAAUtB,MAAAuB,MACjB1B,QAAQC,IAAI,uBAAqBwB,QAAiBC,MAAU,IAE7DC,OAAM,EAAGJ,SAAAK,EAAUzB,MAAA0B,MAClB7B,QAAQC,IAAI,sBAAoB2B,QAAeC,MAAU,IAG7DC,cAAcnB,EAAQ,GAEvBF,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconsole.log(formEl);\n// console.log(formEl.delay);\n// console.log(formEl.step);\nlet delay = Number(formEl.delay.value);\n// const step = Number(formEl.step.value);\n// const amount = formEl.amount.value;\nlet position = 0;\n// let delay = 0;\n// console.log(delay);\n\nformEl.addEventListener('submit', createPromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // const delay = Number(formEl.delay.value);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(event) {\n  event.preventDefault();\n\n  // const amount = Number(formEl.amount.value);\n  const step = Number(formEl.step.value);\n  let delay = Number(formEl.delay.value);\n  // console.log(delay);\n  \n  const timerId = setInterval(() => {\n    const amount = Number(formEl.amount.value);\n    position += 1;\n    delay += step;\n    if (position <= amount) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      clearInterval(timerId);\n    }\n  }, step);\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","console","log","Number","delay","value","$47d4ff9957288465$var$position","addEventListener","event","preventDefault","step","delay2","timerId","setInterval","amount","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","position2","delay3","catch","position3","delay4","clearInterval"],"version":3,"file":"03-promises.6b766495.js.map"}