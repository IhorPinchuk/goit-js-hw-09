{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SACtCC,QAAQC,IAAIJ,GACZ,IAAIK,EAAQC,OAAON,EAAOO,MAAMC,OAC5BC,EAAW,EAIf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAab,OAAON,EAAOO,MAAMC,OACvCY,YAAW,KACLJ,EACFF,EAAQ,CAAEO,SAAAV,EAAUJ,MAAAK,IAEpBG,EAAO,CAAEM,SAAAV,EAAUJ,MAAAK,GAAQ,GAE5BO,EAAW,G,CAZlBnB,EAAOsB,iBAAiB,UAgBxB,SAAwBC,GACtBA,EAAMC,iBAEN,MAAMC,EAAOnB,OAAON,EAAOyB,KAAKjB,OAChCH,EAAQC,OAAON,EAAOO,MAAMC,OAC5BC,GAAY,EAEK,IAAbA,GACFC,EAAcD,EAAUJ,GACrBqB,MAAK,EAAGL,SAAAM,EAAUpB,MAAAqB,MACjB9B,EAAA+B,OAAOC,QAAQ,uBAAqBH,QAAiBC,MAAU,IAEhEG,OAAM,EAAGV,SAAAW,EAAUzB,MAAA0B,MAClBnC,EAAA+B,OAAOK,QAAQ,sBAAoBF,QAAiBC,MAAU,IAGpE,MAAME,EAAUC,aAAY,KAC1B,MAAMC,EAAS/B,OAAON,EAAOqC,OAAO7B,OACpCC,GAAY,EACZJ,GAASoB,EAELhB,GAAY4B,EACd3B,EAAcD,EAAUJ,GACrBqB,MAAK,EAAGL,SAAAiB,EAAU/B,MAAAgC,MACjBzC,EAAA+B,OAAOC,QAAQ,uBAAqBQ,QAAiBC,MAAU,IAEhER,OAAM,EAAGV,SAAAmB,EAAUjC,MAAAkC,MAClB3C,EAAA+B,OAAOK,QAAQ,sBAAoBM,QAAeC,MAAU,IAGhEC,cAAcP,EAAQ,GAEvBV,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconsole.log(formEl);\nlet delay = Number(formEl.delay.value);\nlet position = 0;\n\nformEl.addEventListener('submit', createPromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const firstDelay = Number(formEl.delay.value);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, firstDelay);\n  });\n}\n\nfunction createPromises(event) {\n  event.preventDefault();\n\n  const step = Number(formEl.step.value);\n  delay = Number(formEl.delay.value);\n  position += 1;\n\n  if (position === 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  const timerId = setInterval(() => {\n    const amount = Number(formEl.amount.value);\n    position += 1;\n    delay += step;\n\n    if (position <= amount) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      clearInterval(timerId);\n    }\n  }, step);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","console","log","$47d4ff9957288465$var$delay","Number","delay","value","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","firstDelay","setTimeout","position","addEventListener","event","preventDefault","step","then","position2","delay2","Notify","success","catch","position3","delay3","failure","timerId","setInterval","amount","position4","delay4","position5","delay5","clearInterval"],"version":3,"file":"03-promises.101265af.js.map"}